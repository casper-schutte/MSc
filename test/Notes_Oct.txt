
04/10/21:
    To do:
        - Find real world data to test the algorithm on. Two closely related species/strains that are fully
            sequenced, are almost identical aside from a small number of large rearrangements.
        - Test whether the script that makes reads (and Bowtie2) can handle the presence of multiple chromosomes.
            It should be able to, but test it. NB: Why can't I find fastQ files that contain multiple
            chromosomes?
        - Clean up the code, try to start thinking about how to integrate it into one script (that calls other
            ones). Think about how (or if) we are going to integrate Bowtie2 into it as well. Should be possible,
            since there are wrappers that can do it.


05/10/21:
    - Today I will perform an experiment where I align fastQ reads to a genome that contains multiple chromosomes.
        Still using lambda_virus.fa to test. Will separate this genome into different chromosomes.
    - Will map reads from the genome to the same genome that is split into 3 large chromosomes.
    - Need to adjust the script that makes reads to handle this, will spend some time making sure the reads are
        generated correctly.
        Due to the way that the reads are constructed, bowtie2 is detecting the ends of chromosomes as breakpoints.
        There are some things I can do about this. One way is to make the reads "better" such that no read can span
        the gap between chromosomes. Test this first
        The other way is to accept that it will happen and use the chromosome number identifier (starting with ">")
        to identify borders. This might be OK because we can't take the border between chromosomes to be continuous.


06/10/21:
    - After going through some literature, one way to fix my reads might be to start constructing them from BOTH ends
        simultaneously, and having some extra overlap in the middle. This might solve the problem I faced when the
        very last read would be only a few bp long. Instead, I will have a read that overlaps more than normal right
        in the middle which should map normally. Thus, this problem won't be repeated when I separate the reads
        by chromosome.
    - I solved the latter problem in the above paragraph. The reads are now constructed from both ends simultaneously.

07/10/21:
    - I need to make the script make reads in 'groups' of chromosomes, because reads are still being constructed
        that span across chromosomes, making the alignment think that there was a rearrangement.
    - Verified that constructing reads from both ends maintains the integrity of the sequence in the reads. Instead
        of having a shorter read at the end, a few read (one or two, in my experiments) exist in the middle and
        overlap more than the others. This is the opposite of a problem.

08/10/21:
    - Changed the script that makes the reads from the sequence so that it incorporates the simultaneously constructed
        reads. This allows the construction of reads from seq files that contain multiple chromosomes without the
        border between chromosomes being flagged as a breakpoint. This means I can now test rearrangements between
        different chromosomes, and then test the algorithm on real data as well.